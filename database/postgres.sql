-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS name
(
    id integer NOT NULL,
    name text NOT NULL,
    slogan text NOT NULL,
    description text NOT NULL,
    category text NOT NULL,
    default_price character varying(20) NOT NULL,
    features text[],
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS features
(
    id integer NOT NULL,
    product_id integer,
    feature text,
    value text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS styles
(
    id integer NOT NULL,
    "productId" integer NOT NULL,
    name text NOT NULL,
    sale_price text,
    original_price text,
    default_style boolean,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS photos
(
    id integer,
    "styleId" integer NOT NULL,
    thumbnail_url text NOT NULL,
    url text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS skus
(
    id integer NOT NULL,
    "styleId" integer NOT NULL,
    size text NOT NULL,
    quantity integer NOT NULL DEFAULT 0,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS related
(
    id integer,
    product_id integer NOT NULL,
    related_id integer,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS features
    ADD FOREIGN KEY (product_id)
    REFERENCES name (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

-- Do I really need two of these?
-- ALTER TABLE IF EXISTS features
--     ADD FOREIGN KEY (product_id)
--     REFERENCES name (id) MATCH SIMPLE
--     ON UPDATE NO ACTION
--     ON DELETE NO ACTION
--     NOT VALID;


ALTER TABLE IF EXISTS styles
    ADD FOREIGN KEY ("productId")
    REFERENCES name (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS photos
    ADD FOREIGN KEY ("styleId")
    REFERENCES styles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS skus
    ADD FOREIGN KEY ("styleId")
    REFERENCES styles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS related
    ADD FOREIGN KEY (product_id)
    REFERENCES name (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


copy public."name" (id, name, slogan, description, category, default_price) FROM '/Users/jupiter/Hack_Reactor/rfe2202/SDC/data/product.csv' DELIMITER ',' CSV HEADER QUOTE '"' ESCAPE '''';

copy public."related" FROM '/Users/jupiter/Hack_Reactor/rfe2202/SDC/data/related.csv' DELIMITER ',' CSV HEADER QUOTE '"' ESCAPE '''';

copy public."features" (id, product_id, feature, value) FROM '/Users/jupiter/Hack_Reactor/rfe2202/SDC/data/features.csv' DELIMITER ',' CSV HEADER QUOTE '"' ESCAPE '''';

copy public."styles" (id, "productId", name, sale_price, original_price, default_style) FROM '/Users/jupiter/Hack_Reactor/rfe2202/SDC/data/styles.csv' DELIMITER ',' CSV HEADER QUOTE '"' ESCAPE '''';

copy public."photos" (id, "styleId", thumbnail_url, url) FROM '/Users/jupiter/Hack_Reactor/rfe2202/SDC/data/photos.csv' DELIMITER ',' CSV HEADER QUOTE '"' ESCAPE '''';

copy public."skus" (id, "styleId", size, quantity) FROM '/Users/jupiter/Hack_Reactor/rfe2202/SDC/data/skus.csv' DELIMITER ',' CSV HEADER QUOTE '"' ESCAPE '''';
END;